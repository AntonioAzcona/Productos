{"ast":null,"code":"var _jsxFileName = \"/Users/azcona/Desktop/payment/src/components/App.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  id: 'name',\n  label: 'Name',\n  minWidth: 170\n}, {\n  id: 'code',\n  label: 'ISO\\u00a0Code',\n  minWidth: 100\n}, {\n  id: 'population',\n  label: 'Population',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'size',\n  label: 'Size\\u00a0(km\\u00b2)',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toLocaleString('en-US')\n}, {\n  id: 'density',\n  label: 'Density',\n  minWidth: 170,\n  align: 'right',\n  format: value => value.toFixed(2)\n}];\n\nfunction createData(name, code, population, size) {\n  const density = population / size;\n  return {\n    name,\n    code,\n    population,\n    size,\n    density\n  };\n}\n\nconst rows = [createData('India', 'IN', 1324171354, 3287263), createData('China', 'CN', 1403500365, 9596961), createData('Italy', 'IT', 60483973, 301340), createData('United States', 'US', 327167434, 9833520), createData('Canada', 'CA', 37602103, 9984670), createData('Australia', 'AU', 25475400, 7692024), createData('Germany', 'DE', 83019200, 357578), createData('Ireland', 'IE', 4857000, 70273), createData('Mexico', 'MX', 126577691, 1972550), createData('Japan', 'JP', 126317000, 377973), createData('France', 'FR', 67022000, 640679), createData('United Kingdom', 'GB', 67545757, 242495), createData('Russia', 'RU', 146793744, 17098246), createData('Nigeria', 'NG', 200962417, 923768), createData('Brazil', 'BR', 210147125, 8515767)];\n\nfunction App() {\n  _s();\n\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      sx: {\n        maxHeight: 440\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        stickyHeader: true,\n        \"aria-label\": \"sticky table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: [/*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              colSpan: 2,\n              children: \"Country\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              colSpan: 3,\n              children: \"Details\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n            children: columns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n              align: column.align,\n              style: {\n                top: 57,\n                minWidth: column.minWidth\n              },\n              children: column.label\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: rows.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(row => {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              role: \"checkbox\",\n              tabIndex: -1,\n              children: columns.map(column => {\n                const value = row[column.id];\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: column.align,\n                  children: column.format && typeof value === 'number' ? column.format(value) : value\n                }, column.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 25\n                }, this);\n              })\n            }, row.code, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [10, 25, 100],\n      component: \"div\",\n      count: rows.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"65nbIEELuFY2eeUXbED/8VsHrEQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/azcona/Desktop/payment/src/components/App.js"],"names":["React","Paper","Table","TableBody","TableCell","TableContainer","TableHead","TablePagination","TableRow","columns","id","label","minWidth","align","format","value","toLocaleString","toFixed","createData","name","code","population","size","density","rows","App","page","setPage","useState","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","width","maxHeight","map","column","top","slice","row","length"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Paper from '@mui/material/Paper';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\n\ninterface Column {\n  id: 'name' | 'code' | 'population' | 'size' | 'density';\n  label: string;\n  minWidth?: number;\n  align?: 'right';\n  format?: (value: number) => string;\n}\n\nconst columns: Column[] = [\n  { id: 'name', label: 'Name', minWidth: 170 },\n  { id: 'code', label: 'ISO\\u00a0Code', minWidth: 100 },\n  {\n    id: 'population',\n    label: 'Population',\n    minWidth: 170,\n    align: 'right',\n    format: (value: number) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'size',\n    label: 'Size\\u00a0(km\\u00b2)',\n    minWidth: 170,\n    align: 'right',\n    format: (value: number) => value.toLocaleString('en-US'),\n  },\n  {\n    id: 'density',\n    label: 'Density',\n    minWidth: 170,\n    align: 'right',\n    format: (value: number) => value.toFixed(2),\n  },\n];\n\ninterface Data {\n  name: string;\n  code: string;\n  population: number;\n  size: number;\n  density: number;\n}\n\nfunction createData(\n  name: string,\n  code: string,\n  population: number,\n  size: number,\n): Data {\n  const density = population / size;\n  return { name, code, population, size, density };\n}\n\nconst rows = [\n  createData('India', 'IN', 1324171354, 3287263),\n  createData('China', 'CN', 1403500365, 9596961),\n  createData('Italy', 'IT', 60483973, 301340),\n  createData('United States', 'US', 327167434, 9833520),\n  createData('Canada', 'CA', 37602103, 9984670),\n  createData('Australia', 'AU', 25475400, 7692024),\n  createData('Germany', 'DE', 83019200, 357578),\n  createData('Ireland', 'IE', 4857000, 70273),\n  createData('Mexico', 'MX', 126577691, 1972550),\n  createData('Japan', 'JP', 126317000, 377973),\n  createData('France', 'FR', 67022000, 640679),\n  createData('United Kingdom', 'GB', 67545757, 242495),\n  createData('Russia', 'RU', 146793744, 17098246),\n  createData('Nigeria', 'NG', 200962417, 923768),\n  createData('Brazil', 'BR', 210147125, 8515767),\n];\n\nfunction App() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\n\n  const handleChangePage = (event: unknown, newPage: number) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return (\n    <Paper sx={{ width: '100%' }}>\n      <TableContainer sx={{ maxHeight: 440 }}>\n        <Table stickyHeader aria-label=\"sticky table\">\n          <TableHead>\n            <TableRow>\n              <TableCell align=\"center\" colSpan={2}>\n                Country\n              </TableCell>\n              <TableCell align=\"center\" colSpan={3}>\n                Details\n              </TableCell>\n            </TableRow>\n            <TableRow>\n              {columns.map((column) => (\n                <TableCell\n                  key={column.id}\n                  align={column.align}\n                  style={{ top: 57, minWidth: column.minWidth }}\n                >\n                  {column.label}\n                </TableCell>\n              ))}\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {rows\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row) => {\n                return (\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.code}>\n                    {columns.map((column) => {\n                      const value = row[column.id];\n                      return (\n                        <TableCell key={column.id} align={column.align}>\n                          {column.format && typeof value === 'number'\n                            ? column.format(value)\n                            : value}\n                        </TableCell>\n                      );\n                    })}\n                  </TableRow>\n                );\n              })}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[10, 25, 100]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onPageChange={handleChangePage}\n        onRowsPerPageChange={handleChangeRowsPerPage}\n      />\n    </Paper>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}