{"ast":null,"code":"var _jsxFileName = \"/Users/azcona/Desktop/payment/src/components/FormPay.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { alpha, styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport { OutlinedInputProps } from '@mui/material/OutlinedInput';\nimport Button from '@mui/material/Button';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Stack from '@mui/material/Stack';\nimport CleaningServicesIcon from '@mui/icons-material/CleaningServices';\nimport Alert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ValidationTextField = styled(TextField)({\n  '& input:valid + fieldset': {\n    borderColor: 'green',\n    borderWidth: 2\n  },\n  '& input:invalid + fieldset': {\n    borderColor: 'red',\n    borderWidth: 2\n  },\n  '& input:valid:focus + fieldset': {\n    borderLeftWidth: 6,\n    padding: '4px !important'\n  }\n});\n_c = ValidationTextField;\nexport default function FormPayProducts(_ref) {\n  _s();\n\n  let {\n    datos,\n    setDatos\n  } = _ref;\n  const [open, setOpen] = React.useState(false);\n  const [alertMessage, setAlertMessage] = useState('');\n  const [tipoAlert, setTipoAlert] = useState('');\n  const [newData, setNewData] = useState({\n    sku: '',\n    name: '',\n    quantity: '',\n    price: ''\n  });\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return;\n    }\n\n    setOpen(false);\n  };\n\n  const handleInputChange = event => {\n    setNewData({ ...newData,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  const sendData = event => {\n    event.preventDefault();\n\n    if (newData.sku != '' && newData.name != '' && newData.quantity != '' && newData.price != '') {\n      setDatos([...datos, newData]);\n      document.getElementById('sku').value = '';\n      document.getElementById('name').value = '';\n      document.getElementById('quantity').value = '';\n      document.getElementById('price').value = '';\n      setNewData({\n        sku: '',\n        name: '',\n        quantity: '',\n        price: ''\n      });\n    } else {\n      setAlertMessage('Rellena todos los campos por favor');\n      setTipoAlert('info');\n      setOpen(true);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendData,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        component: \"form\",\n        noValidate: true,\n        sx: {\n          display: 'grid',\n          gridTemplateColumns: {\n            sm: '1fr 1fr'\n          },\n          gap: 2\n        },\n        children: [/*#__PURE__*/_jsxDEV(ValidationTextField, {\n          label: \"Sku\",\n          required: true,\n          variant: \"outlined\",\n          defaultValue: \"\",\n          id: \"sku\",\n          name: \"sku\",\n          type: \"text\" // value={newData.sku}\n          ,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ValidationTextField, {\n          label: \"Name\",\n          required: true,\n          variant: \"outlined\",\n          defaultValue: \"\",\n          id: \"name\",\n          type: \"text\",\n          name: \"name\" // value={newData.name}\n          ,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ValidationTextField, {\n          label: \"Quantity\",\n          required: true,\n          variant: \"outlined\",\n          defaultValue: \"\",\n          id: \"quantity\",\n          type: \"number\",\n          name: \"quantity\" // value={newData.quantity}\n          ,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(ValidationTextField, {\n          label: \"Price\",\n          required: true,\n          variant: \"outlined\",\n          defaultValue: \"-\",\n          id: \"price\",\n          type: \"number\",\n          name: \"price\" // value={newData.price}\n          ,\n          onChange: handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Stack, {\n        direction: \"row\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        spacing: 2,\n        m: 3,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          endIcon: /*#__PURE__*/_jsxDEV(AddCircleIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 20\n          }, this),\n          color: \"success\",\n          type: \"submit\",\n          children: \" Agregar producto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n        open: open,\n        autoHideDuration: 4000,\n        onClose: handleClose,\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Alert, {\n          onClose: handleClose,\n          variant: \"filled\",\n          severity: tipoAlert,\n          alignItems: \"center\",\n          children: alertMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(FormPayProducts, \"M/xtba6noHGnrPQUehhFZHcazt4=\");\n\n_c2 = FormPayProducts;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ValidationTextField\");\n$RefreshReg$(_c2, \"FormPayProducts\");","map":{"version":3,"sources":["/Users/azcona/Desktop/payment/src/components/FormPay.js"],"names":["React","useState","alpha","styled","InputBase","Box","InputLabel","TextField","TextFieldProps","FormControl","OutlinedInputProps","Button","AddCircleIcon","Stack","CleaningServicesIcon","Alert","Snackbar","ValidationTextField","borderColor","borderWidth","borderLeftWidth","padding","FormPayProducts","datos","setDatos","open","setOpen","alertMessage","setAlertMessage","tipoAlert","setTipoAlert","newData","setNewData","sku","name","quantity","price","handleClose","event","reason","handleInputChange","target","value","sendData","preventDefault","document","getElementById","display","gridTemplateColumns","sm","gap"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { alpha, styled } from '@mui/material/styles';\nimport InputBase from '@mui/material/InputBase';\nimport Box from '@mui/material/Box';\nimport InputLabel from '@mui/material/InputLabel';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport FormControl from '@mui/material/FormControl';\nimport { OutlinedInputProps } from '@mui/material/OutlinedInput';\nimport Button from '@mui/material/Button';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Stack from '@mui/material/Stack';\nimport CleaningServicesIcon from '@mui/icons-material/CleaningServices';\nimport Alert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\n\nconst ValidationTextField = styled(TextField)({\n  '& input:valid + fieldset': {\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  '& input:invalid + fieldset': {\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n  '& input:valid:focus + fieldset': {\n    borderLeftWidth: 6,\n    padding: '4px !important', \n  },\n});\n\nexport default function FormPayProducts({ datos, setDatos }) {\n\n  const [open, setOpen] = React.useState(false)\n  const [alertMessage, setAlertMessage] = useState('')\n  const [tipoAlert, setTipoAlert] = useState('')\n  \n  const [newData, setNewData] = useState({\n    sku: '',\n    name: '',\n    quantity: '',\n    price: ''\n  })\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setOpen(false)\n  }\n\n  const handleInputChange = (event) => {\n    setNewData({\n      ...newData,\n      [event.target.name] : event.target.value\n    })\n  }\n\n  const sendData = (event) => {\n    event.preventDefault();\n    if(newData.sku != '' && newData.name != '' && newData.quantity != '' && newData.price != ''){\n      setDatos([...datos, newData])\n      document.getElementById('sku').value = ''\n      document.getElementById('name').value = ''\n      document.getElementById('quantity').value = ''\n      document.getElementById('price').value = ''\n      setNewData({\n        sku: '',\n        name: '',\n        quantity: '',\n        price: ''\n      })\n    } else {\n      setAlertMessage('Rellena todos los campos por favor')\n      setTipoAlert('info')\n      setOpen(true)\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={sendData}>\n        <Box\n        component=\"form\"\n        noValidate\n        sx={{\n            display: 'grid',\n            gridTemplateColumns: { sm: '1fr 1fr' },\n            gap: 2,\n        }}\n        > \n        <ValidationTextField\n            label='Sku'\n            required\n            variant=\"outlined\"\n            defaultValue=\"\"\n            id='sku'\n            name='sku'\n            type='text'\n            // value={newData.sku}\n            onChange={handleInputChange}\n        />\n        <ValidationTextField\n            label='Name'\n            required\n            variant=\"outlined\"\n            defaultValue=\"\"\n            id='name'\n            type='text'\n            name='name'\n            // value={newData.name}\n            onChange={handleInputChange}\n        />\n        <ValidationTextField\n            label='Quantity'\n            required\n            variant=\"outlined\"\n            defaultValue=\"\"\n            id='quantity'\n            type='number'\n            name='quantity'\n            // value={newData.quantity}\n            onChange={handleInputChange}\n        />\n        <ValidationTextField\n            label='Price'\n            required\n            variant=\"outlined\"\n            defaultValue=\"-\"\n            id='price'\n            type='number'\n            name='price'\n            // value={newData.price}\n            onChange={handleInputChange}\n        />\n        </Box>\n        <Stack\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n            m={3}\n        >\n        <Button \n          variant=\"contained\" \n          endIcon={<AddCircleIcon />} \n          color=\"success\" \n          type='submit'\n        > Agregar producto\n        </Button>\n        </Stack>\n        <Snackbar open={open} autoHideDuration={4000} onClose={handleClose} alignItems=\"center\">\n          <Alert onClose={handleClose} variant=\"filled\" severity={tipoAlert} alignItems=\"center\">{alertMessage}</Alert>\n        </Snackbar>\n      </form>\n    </>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}