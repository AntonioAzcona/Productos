[{"/Users/azcona/Desktop/Test jobs/payment/src/index.js":"1","/Users/azcona/Desktop/Test jobs/payment/src/App.js":"2","/Users/azcona/Desktop/Test jobs/payment/src/components/TablePayment.js":"3","/Users/azcona/Desktop/Test jobs/payment/src/components/FormPay.js":"4"},{"size":207,"mtime":1654311255488,"results":"5","hashOfConfig":"6"},{"size":5877,"mtime":1654311649224,"results":"7","hashOfConfig":"6"},{"size":2708,"mtime":1654311489689,"results":"8","hashOfConfig":"6"},{"size":3899,"mtime":1654323330094,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"k85arc",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25"},"/Users/azcona/Desktop/Test jobs/payment/src/index.js",[],[],["26","27"],"/Users/azcona/Desktop/Test jobs/payment/src/App.js",["28","29","30","31"],[],"import React, { useState, useCallback, useEffect } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport TablePay from './components/TablePayment';\nimport FormPayProducts from './components/FormPay';\nimport axios from 'axios';\nimport InputLabel from '@mui/material/InputLabel';\nimport MenuItem from '@mui/material/MenuItem';\nimport FormControl from '@mui/material/FormControl';\nimport Select from '@mui/material/Select';\nimport Alert from '@mui/material/Alert';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport PaidIcon from '@mui/icons-material/Paid';\nimport Snackbar from '@mui/material/Snackbar';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  backgroundColor: theme.palette.mode === 'dark' ? '#1A2027' : '#fff',\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nconst Div = styled('div')(({ theme }) => ({\n  ...theme.typography.button,\n  backgroundColor: theme.palette.background.paper,\n  padding: theme.spacing(1),\n}));\n\nexport default function AutoGrid() {\n\n  const [datos, setDatos] = useState([])\n  const [products, setProducts] = useState([])\n  const [numOrder, setNumOrder] = React.useState([])\n  const [orders, setOrders] = React.useState([])\n  const [flag, setFlag] = useState(false)\n\n  const [open, setOpen] = React.useState(false)\n  const [alertMessage, setAlertMessage] = useState('')\n  const [tipoAlert, setTipoAlert] = useState('')\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setOpen(false)\n  }\n\n  const handleChangeOrder = (event) => {\n    setNumOrder(event.target.value);\n    let orderFilter = products.filter(producto => producto.number == event.target.value)[0];\n    setDatos(orderFilter.items)\n  };\n\n  const handleMessagePay = (event) => {\n    setAlertMessage('Pago realizado correctamente')\n    setTipoAlert('info')\n    setOpen(true)\n  }\n  \n  const accessToken = 'eyJhbGciOiJIUzUxMiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJwUGFINU55VXRxTUkzMDZtajdZVHdHV3JIZE81cWxmaCIsImlhdCI6MTYyMDY2Mjk4NjIwM30.lhfzSXW9_TC67SdDKyDbMOYiYsKuSk6bG6XDE1wz2OL4Tq0Og9NbLMhb0LUtmrgzfWiTrqAFfnPldd8QzWvgVQ'\n  const apiURL = 'https://eshop-deve.herokuapp.com/api/v2/orders';\n\n    const authAxios = axios.create({\n        baseURL: apiURL,\n        headers: {\n            Authorization: `Bearer ${accessToken}`\n        }\n    })\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const request = await authAxios.get(`${apiURL}`)\n                if(request && request['data'] && request['data']['orders']) {\n                    let response = request['data']['orders']\n                    setProducts(response)\n                    if(!flag){\n                      let items = []\n                      let ordenes = []\n                      response.map(ele => {\n                        items.push(ele.items)\n                        ordenes.push(ele.number)\n                      })\n                      let objs = []\n                      items.forEach(element => {\n                        element.forEach(element2 => {\n                          objs.push(element2)\n                        });\n                      });\n                      setDatos(objs)\n                      setOrders(ordenes)\n                      setFlag(true)\n                    }\n                }\n            } catch (err) {\n                console.log('err', err)\n            }\n        }\n        fetchData();\n    }, []);\n\n  return (\n\n    <Grid container style={{ background: '#006500' }}>\n      <Box sx={{ flexGrow: 1 }} m={2}>\n      <Grid container spacing={3}>\n        <Grid item xs={12}>\n          <Item>\n            <Div>{\"Agregar producto\"}</Div>\n            <FormPayProducts datos={datos} setDatos={setDatos} />\n          </Item>\n        </Grid>\n\n        <Grid item xs={2}>\n        <Item style={{ textAlign: 'left' }}>\n            <FormControl fullWidth>\n              <InputLabel id=\"demo-simple-select-label\"># Orden</InputLabel>\n              <Select\n                labelId=\"demo-simple-select-label\"\n                id=\"demo-simple-select\"\n                value={numOrder}\n                label=\"NumOrder\"\n                onChange={handleChangeOrder}\n              >\n                {\n                  orders.map((ele, index) => {\n                    return <MenuItem key={index} value={ele}>#{ele}</MenuItem>\n                  })\n                }\n              </Select>\n            </FormControl>\n            </Item>\n        </Grid>\n\n        <Grid \n          container\n          direction=\"row\"\n          justifyContent=\"flex-end\"\n          alignItems=\"center\"\n          item xs={10}\n        >\n          <Item style={{ textAlign: 'left' }}>\n            <h3 style={{ color: '#000000' }}>NÃºmero de orden: {numOrder}</h3>\n          </Item>\n        </Grid>\n\n        <Grid item xs={12}>\n          <Item>\n            <Div>{\"Listado de productos\"}</Div>\n            <TablePay products={datos} />\n          </Item>\n        </Grid>\n        <Grid item xs={12}>\n            <Stack\n              direction=\"row\"\n              justifyContent=\"flex-end\"\n              alignItems=\"center\"\n              spacing={2}\n              m={3}\n            >\n              <Button \n                variant=\"contained\" \n                endIcon={<PaidIcon />} \n                color=\"info\" \n                onClick={handleMessagePay}\n              > Pagar\n              </Button>\n            </Stack>\n          <Snackbar spacing={6} open={open} autoHideDuration={4000} onClose={handleClose}>\n            <Alert onClose={handleClose} variant=\"filled\" severity={tipoAlert}>{alertMessage}</Alert>\n          </Snackbar>\n        </Grid>\n      </Grid>\n    </Box>\n    </Grid>\n  );\n}\n",["32","33"],"/Users/azcona/Desktop/Test jobs/payment/src/components/TablePayment.js",[],[],"/Users/azcona/Desktop/Test jobs/payment/src/components/FormPay.js",["34","35","36","37","38"],[],"import React, { useState } from 'react';\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport AddCircleIcon from '@mui/icons-material/AddCircle';\nimport Stack from '@mui/material/Stack';\nimport Alert from '@mui/material/Alert';\nimport Snackbar from '@mui/material/Snackbar';\n\nconst ValidationTextField = styled(TextField)({\n  '& input:valid + fieldset': {\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  '& input:invalid + fieldset': {\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n  '& input:valid:focus + fieldset': {\n    borderLeftWidth: 6,\n    padding: '4px !important', \n  },\n});\n\nexport default function FormPayProducts({ datos, setDatos }) {\n\n  const [open, setOpen] = React.useState(false)\n  const [alertMessage, setAlertMessage] = useState('')\n  const [tipoAlert, setTipoAlert] = useState('')\n  \n  const [newData, setNewData] = useState({\n    sku: '',\n    name: '',\n    quantity: '',\n    price: ''\n  })\n\n  const handleClose = (event, reason) => {\n    if (reason === 'clickaway') {\n      return\n    }\n    setOpen(false)\n  }\n\n  const handleInputChange = (event) => {\n    setNewData({\n      ...newData,\n      [event.target.name] : event.target.value\n    })\n  }\n\n  const sendData = (event) => {\n    event.preventDefault();\n    if(newData.sku != '' && newData.name != '' && newData.quantity != '' && newData.price != ''){\n      setDatos([newData, ...datos])\n      document.getElementById('sku').value = ''\n      document.getElementById('name').value = ''\n      document.getElementById('quantity').value = ''\n      document.getElementById('price').value = ''\n      setNewData({\n        sku: '',\n        name: '',\n        quantity: '',\n        price: ''\n      })\n    } else {\n      setAlertMessage('Rellena todos los campos por favor')\n      setTipoAlert('warning')\n      setOpen(true)\n    }\n  }\n\n  return (\n    <>\n      <form onSubmit={sendData}>\n        <Box\n        component=\"form\"\n        noValidate\n        sx={{\n            display: 'grid',\n            gridTemplateColumns: { sm: '1fr 1fr' },\n            gap: 2,\n        }}\n        > \n        <ValidationTextField\n            label='Sku'\n            required\n            variant=\"outlined\"\n            defaultValue=\"\"\n            id='sku'\n            name='sku'\n            type='text'\n            onChange={handleInputChange}\n        />\n        <ValidationTextField\n            label='Name'\n            required\n            variant=\"outlined\"\n            defaultValue=\"\"\n            id='name'\n            type='text'\n            name='name'\n            onChange={handleInputChange}\n        />\n        <ValidationTextField\n            label='Quantity'\n            required\n            variant=\"outlined\"\n            defaultValue=\"\"\n            id='quantity'\n            type='number'\n            name='quantity'\n            onChange={handleInputChange}\n        />\n        <ValidationTextField\n            label='Price'\n            required\n            variant=\"outlined\"\n            defaultValue=\"-\"\n            id='price'\n            type='number'\n            name='price'\n            onChange={handleInputChange}\n        />\n        </Box>\n        <Stack\n            direction=\"row\"\n            justifyContent=\"center\"\n            alignItems=\"center\"\n            spacing={2}\n            m={3}\n        >\n        <Button \n          variant=\"contained\" \n          endIcon={<AddCircleIcon />} \n          color=\"success\" \n          type='submit'\n        > Agregar producto\n        </Button>\n        </Stack>\n      </form>\n      <Snackbar style={{ width: '100%', textAlign:'center' }} spacing={2} open={open} autoHideDuration={4000} onClose={handleClose}>\n        <Alert onClose={handleClose} variant=\"filled\" severity={tipoAlert}>{alertMessage}</Alert>\n      </Snackbar>\n    </>\n  );\n}\n",{"ruleId":"39","replacedBy":"40"},{"ruleId":"41","replacedBy":"42"},{"ruleId":"43","severity":1,"message":"44","line":1,"column":27,"nodeType":"45","messageId":"46","endLine":1,"endColumn":38},{"ruleId":"47","severity":1,"message":"48","line":54,"column":67,"nodeType":"49","messageId":"50","endLine":54,"endColumn":69},{"ruleId":"51","severity":1,"message":"52","line":84,"column":40,"nodeType":"53","messageId":"54","endLine":84,"endColumn":42},{"ruleId":"55","severity":1,"message":"56","line":104,"column":8,"nodeType":"57","endLine":104,"endColumn":10,"suggestions":"58"},{"ruleId":"39","replacedBy":"59"},{"ruleId":"41","replacedBy":"60"},{"ruleId":"43","severity":1,"message":"61","line":4,"column":21,"nodeType":"45","messageId":"46","endLine":4,"endColumn":35},{"ruleId":"47","severity":1,"message":"62","line":55,"column":20,"nodeType":"49","messageId":"50","endLine":55,"endColumn":22},{"ruleId":"47","severity":1,"message":"62","line":55,"column":42,"nodeType":"49","messageId":"50","endLine":55,"endColumn":44},{"ruleId":"47","severity":1,"message":"62","line":55,"column":68,"nodeType":"49","messageId":"50","endLine":55,"endColumn":70},{"ruleId":"47","severity":1,"message":"62","line":55,"column":91,"nodeType":"49","messageId":"50","endLine":55,"endColumn":93},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'useCallback' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'authAxios' and 'flag'. Either include them or remove the dependency array.","ArrayExpression",["65"],["63"],["64"],"'TextFieldProps' is defined but never used.","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [authAxios, flag]",{"range":"68","text":"69"},[3628,3630],"[authAxios, flag]"]